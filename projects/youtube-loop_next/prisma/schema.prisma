generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(cuid())
  email      String      @unique
  name       String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  favorites  Favorite[]
  videoLoops VideoLoop[]

  @@map("users")
}

model VideoLoop {
  id          String         @id @default(cuid())
  videoId     String
  startTime   Float
  endTime     Float
  title       String?
  description String?
  isPublic    Boolean        @default(false)
  playCount   Int            @default(0)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  deletedAt   DateTime?      // ソフトデリート用
  userId      String?
  favorites   Favorite[]
  tags        VideoLoopTag[]
  user        User?          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([videoId])
  @@index([userId])
  @@index([isPublic])
  @@index([createdAt])
  @@index([deletedAt])
  @@map("video_loops")
}

model Favorite {
  id          String    @id @default(cuid())
  userId      String
  videoLoopId String
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  videoLoop   VideoLoop @relation(fields: [videoLoopId], references: [id], onDelete: Cascade)

  @@unique([userId, videoLoopId])
  @@map("favorites")
}

model Tag {
  id         String         @id @default(cuid())
  name       String         @unique
  color      String?
  createdAt  DateTime       @default(now())
  videoLoops VideoLoopTag[]

  @@map("tags")
}

model VideoLoopTag {
  id          String    @id @default(cuid())
  videoLoopId String
  tagId       String
  tag         Tag       @relation(fields: [tagId], references: [id], onDelete: Cascade)
  videoLoop   VideoLoop @relation(fields: [videoLoopId], references: [id], onDelete: Cascade)

  @@unique([videoLoopId, tagId])
  @@map("video_loop_tags")
}
