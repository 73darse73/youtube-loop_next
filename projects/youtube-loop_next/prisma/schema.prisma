// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ユーザー情報（Supabase Authと連携）
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // リレーション
  videoLoops VideoLoop[]

  @@map("users")
}

// YouTubeの動画ループ情報を保存するモデル
model VideoLoop {
  id          String   @id @default(cuid())
  videoId     String   // YouTubeの動画ID
  startTime   Float    // ループ開始時間（秒）
  endTime     Float    // ループ終了時間（秒）
  title       String?  // ループのタイトル（オプション）
  description String?  // ループの説明（オプション）
  isPublic    Boolean  @default(false) // 公開設定
  playCount   Int      @default(0) // 再生回数
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // リレーション
  userId String?
  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([videoId])
  @@index([userId])
  @@index([isPublic])
  @@index([createdAt])
  @@map("video_loops")
}
